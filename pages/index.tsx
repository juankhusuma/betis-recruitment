import { GetServerSideProps } from "next";
import Head from "next/head";
import Card from "../components/Card";
import { GetRotiData, Datum } from "../interfaces/get-roti";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { useState } from "react";

export default function Home(props: { res: GetRotiData }) {
  const [openForm, setOpenForm] = useState<boolean>(false);
  const [data, setData] = useState<Datum[]>(props.res.data);
  const [loading, setLoading] = useState<boolean>(false);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {openForm && (
        <div
          onClick={() => setOpenForm(false)}
          className="fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-25 backdrop-blur-sm"
        ></div>
      )}
      <main>
        <Header />
        <div className="flex justify-center w-full">
          <button
            onClick={() => setOpenForm(true)}
            className="px-6 py-3 my-10 text-sm md:text-lg font-semibold bg-green-400 rounded-lg shadow-xl hover:opacity-80 active:bg-green-700 btn hover:shadow-none"
          >
            Tambahkan Roti
          </button>
        </div>

        {openForm && (
          <form
            className={
              "modal-form fixed z-50 rounded-xl flex flex-col md:flex-row-reverse top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 bg-white  "
            }
            onSubmit={async (e) => {
              e.preventDefault();
              setLoading(true);
              const formData = new FormData(e.target as HTMLFormElement);
              const res = await fetch(
                `${process.env.NEXT_PUBLIC_API_URL}/roti/`,
                {
                  method: "POST",
                  body: formData,
                  headers: {
                    Authorization: `Bearer ${process.env.NEXT_PUBLIC_API_TOKEN}`,
                  },
                }
              );
              const json = await res.json();
              setLoading(false);
              setData([...data, json as any]);
              setOpenForm(false);
            }}
          >
            {/* eslint-disable-next-line @next/next/no-img-element */}
            <img
              className="z-50 blur-[2px] h-[150px] md:h-[450px] object-cover object-center rounded-tr-xl rounded-br-xl"
              src="/bread.jpg"
              alt="bread"
            ></img>
            <fieldset className="flex flex-col p-4 md:p-8 text-sm">
              <label className="font-bold" htmlFor="name">
                Name
              </label>
              <input
                className="md:px-2 py-1 mb-4 border border-green-500 rounded-md"
                type="text"
                name="name"
                required
              />
              <label className="font-bold" htmlFor="description">
                Description
              </label>
              <input
                className="md:px-2 py-1 mb-4 border border-green-500 rounded-md"
                type="text"
                name="description"
                required
              />
              <label className="font-bold" htmlFor="expired_date">
                Expired Date
              </label>
              <input
                className="md:px-2 py-1 mb-4 border cursor-pointer border-green-500 rounded-md"
                type="date"
                name="expired_date"
                required
              />
              <label className="font-bold" htmlFor="image">
                Image
              </label>
              <input
                className="px-2 py-1 mb-4 border border-green-500 rounded-md cursor-pointer"
                type="file"
                name="image"
                required
              />
              <input
                className="p-2 mx-auto mt-5 shadow-3xl cursor-pointer hover:shadow-none hover:bg-gray-500 text-white rounded-xl bg-slate-600"
                type="submit"
                value={loading ? "Loading..." : "Submit"}
              />
            </fieldset>
          </form>
        )}
        <div className="grid md:grid-cols-[1fr,1fr] lg:grid-cols-[1fr,1fr,1fr] place-items-center gap-y-8 mx-5 my-10">
          {data.map(({ id, name, description, expired_date, image }) => (
            <Card
              key={id}
              name={name}
              description={description}
              expired_date={expired_date}
              image={image}
            />
          ))}
        </div>
        <Footer />
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/roti`, {
    headers: {
      Authorization: `Bearer ${process.env.NEXT_PUBLIC_API_TOKEN}`,
    },
  });
  const data = await res.json();

  console.log(data);
  return {
    props: { res: data },
  };
};
